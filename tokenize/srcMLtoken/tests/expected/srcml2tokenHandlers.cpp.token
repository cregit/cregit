-:-	begin_unit|revision:0.9.5;language:C++;cregit-version:0.0.1
-:-	begin_comment
1:1	comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *   *      http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
-:-	end_comment
-:-	begin_comment
19:1	comment|// ---------------------------------------------------------------------------
-:-	end_comment
-:-	begin_comment
20:1	comment|//  Includes
-:-	end_comment
-:-	begin_comment
21:1	comment|// ---------------------------------------------------------------------------
-:-	end_comment
-:-	begin_include
22:1	include|#
22:2	directive|include
22:10	file|<string.h>
-:-	end_include
-:-	begin_include
23:1	include|#
23:2	directive|include
23:10	file|<iostream>
-:-	end_include
-:-	begin_include
24:1	include|#
24:2	directive|include
24:10	file|<stack>
-:-	end_include
-:-	begin_include
25:1	include|#
25:2	directive|include
25:10	file|<string>
-:-	end_include
-:-	begin_include
26:1	include|#
26:2	directive|include
26:10	file|<stdio.h>
-:-	end_include
-:-	begin_include
27:1	include|#
27:2	directive|include
27:10	file|<algorithm>
-:-	end_include
-:-	begin_include
29:1	include|#
29:2	directive|include
29:10	file|"srcml2token.hpp"
-:-	end_include
-:-	begin_include
30:1	include|#
30:2	directive|include
30:10	file|<xercesc/sax2/Attributes.hpp>
-:-	end_include
-:-	begin_include
31:1	include|#
31:2	directive|include
31:10	file|<xercesc/sax/SAXParseException.hpp>
-:-	end_include
-:-	begin_include
32:1	include|#
32:2	directive|include
32:10	file|<xercesc/sax/SAXException.hpp>
-:-	end_include
-:-	begin_function
35:1	name|std
35:4	operator|::
35:6	name|string
35:13	name|get_attribute_value
35:32	parameter_list|(
35:33	specifier|const
35:39	name|Attributes
35:49	modifier|&
35:51	name|attrs
35:56	parameter_list|,
35:58	name|std
35:61	operator|::
35:63	name|string
35:70	name|name
35:74	parameter_list|)
35:76	block|{
36:5	name|XMLCh
36:10	modifier|*
36:12	name|revName
36:19	init|=
36:21	name|XMLString
36:30	operator|::
36:32	name|transcode
36:41	argument_list|(
36:42	name|name
36:46	operator|.
36:47	name|c_str
36:52	argument_list|()
36:54	argument_list|)
36:55	decl_stmt|;
37:5	name|char
37:9	modifier|*
37:11	name|st
37:14	init|=
37:16	name|XMLString
37:25	operator|::
37:27	name|transcode
37:36	argument_list|(
37:37	name|attrs
37:42	operator|.
37:43	name|getValue
37:51	argument_list|(
37:52	name|revName
37:59	argument_list|)
37:60	argument_list|)
37:61	decl_stmt|;
38:5	name|std
38:8	operator|::
38:10	name|string
38:17	name|result
38:24	init|=
38:26	literal|""
38:28	decl_stmt|;
39:5	if|if
39:8	condition|(
39:9	name|st
39:12	operator|!=
39:15	name|NULL
39:19	condition|)
40:9	name|result
40:16	operator|=
40:18	name|st
40:20	expr_stmt|;
41:5	return|return
41:12	name|result
41:18	return|;
41:19	block|}
-:-	end_function
-:-	begin_function
45:1	name|std
45:4	operator|::
45:6	name|string
45:13	name|mytrim
45:19	parameter_list|(
45:20	specifier|const
45:26	name|std
45:29	operator|::
45:31	name|string
45:37	modifier|&
45:39	name|str
45:42	parameter_list|,
46:18	specifier|const
46:24	name|std
46:27	operator|::
46:29	name|string
46:35	modifier|&
46:37	name|whitespace
46:48	init|=
46:50	literal|" \t\n"
46:57	parameter_list|)
47:1	block|{
48:5	name|std
48:8	operator|::
48:10	name|size_t
48:17	name|strBegin
48:26	init|=
48:28	name|str
48:31	operator|.
48:32	name|find_first_not_of
48:49	argument_list|(
48:50	name|whitespace
48:60	argument_list|)
48:61	decl_stmt|;
49:1	comment|//    std::cout<< "---["<< str<< "]"<< strBegin<< std::endl;
51:5	if|if
51:8	condition|(
51:9	name|strBegin
51:18	operator|==
51:21	name|std
51:24	operator|::
51:26	name|string
51:32	operator|::
51:34	name|npos
51:38	condition|)
52:9	return|return
52:16	literal|""
52:18	return|;
52:20	comment|// no content
54:5	name|int
54:10	name|strEnd
54:17	init|=
54:19	name|str
54:22	operator|.
54:23	name|find_last_not_of
54:39	argument_list|(
54:40	name|whitespace
54:50	argument_list|)
54:51	decl_stmt|;
55:5	name|int
55:10	name|strRange
55:19	init|=
55:21	name|strEnd
55:28	operator|-
55:30	name|strBegin
55:39	operator|+
55:41	literal|1
55:42	decl_stmt|;
57:5	return|return
57:12	name|str
57:15	operator|.
57:16	name|substr
57:22	argument_list|(
57:23	name|strBegin
57:31	argument_list|,
57:33	name|strRange
57:41	argument_list|)
57:42	return|;
57:43	block|}
-:-	end_function
-:-	begin_comment
60:1	comment|// ---------------------------------------------------------------------------
-:-	end_comment
-:-	begin_comment
61:1	comment|//  srcml2tokenHandlers: Constructors and Destructor
-:-	end_comment
-:-	begin_comment
62:1	comment|// ---------------------------------------------------------------------------
-:-	end_comment
-:-	begin_constructor
63:1	name|srcml2tokenHandlers
63:20	operator|::
63:22	name|srcml2tokenHandlers
63:41	parameter_list|()
63:44	member_init_list|:
64:3	name|depth
64:8	argument_list|(
64:9	literal|0
64:10	argument_list|)
65:1	block|{
66:5	empty_stmt|;
66:6	block|}
-:-	end_constructor
-:-	begin_destructor
69:1	name|srcml2tokenHandlers
69:20	operator|::
69:22	name|~
69:23	name|srcml2tokenHandlers
69:42	parameter_list|()
70:1	block|{ }
-:-	end_destructor
-:-	begin_function
73:1	name|void
73:6	name|srcml2tokenHandlers
73:25	operator|::
73:27	name|setPosition
73:38	parameter_list|(
73:39	specifier|const
73:45	name|std
73:48	operator|::
73:50	name|string
73:57	name|newPos
73:63	parameter_list|)
74:1	block|{
75:5	name|pos
75:9	operator|=
75:11	name|newPos
75:17	expr_stmt|;
76:5	comment|//std::cout<< "setting position "<< newPos<< std::endl;
76:5	block|}
-:-	end_function
-:-	begin_function
79:1	name|void
79:6	name|srcml2tokenHandlers
79:25	operator|::
79:27	name|setPosition
79:38	parameter_list|(
79:39	specifier|const
79:45	name|Attributes
79:55	modifier|&
79:57	name|attrs
79:62	parameter_list|)
80:1	block|{
81:5	name|pos
81:9	operator|=
81:11	name|position
81:19	argument_list|(
81:20	name|attrs
81:25	argument_list|)
81:26	expr_stmt|;
81:27	block|}
-:-	end_function
-:-	begin_function
84:1	name|std
84:4	operator|::
84:6	name|string
84:13	name|srcml2tokenHandlers
84:32	operator|::
84:34	name|position
84:42	parameter_list|(
84:43	specifier|const
84:49	name|Attributes
84:59	modifier|&
84:61	name|attrs
84:66	parameter_list|)
85:1	block|{
86:5	name|std
86:8	operator|::
86:10	name|string
86:17	name|p
86:19	init|=
86:21	literal|""
86:23	decl_stmt|;
87:5	name|XMLCh
87:10	modifier|*
87:12	name|lineName
87:20	init|=
87:22	name|XMLString
87:31	operator|::
87:33	name|transcode
87:42	argument_list|(
87:43	literal|"pos:line"
87:53	argument_list|)
87:54	decl_stmt|;
88:5	name|char
88:9	modifier|*
88:11	name|line
88:16	init|=
88:18	name|XMLString
88:27	operator|::
88:29	name|transcode
88:38	argument_list|(
88:39	name|attrs
88:44	operator|.
88:45	name|getValue
88:53	argument_list|(
88:54	name|lineName
88:62	argument_list|)
88:63	argument_list|)
88:64	decl_stmt|;
89:5	name|XMLCh
89:10	modifier|*
89:12	name|colName
89:19	init|=
89:21	name|XMLString
89:30	operator|::
89:32	name|transcode
89:41	argument_list|(
89:42	literal|"pos:column"
89:54	argument_list|)
89:55	decl_stmt|;
90:5	name|char
90:9	modifier|*
90:11	name|col
90:15	init|=
90:17	name|XMLString
90:26	operator|::
90:28	name|transcode
90:37	argument_list|(
90:38	name|attrs
90:43	operator|.
90:44	name|getValue
90:52	argument_list|(
90:53	name|colName
90:60	argument_list|)
90:61	argument_list|)
90:62	decl_stmt|;
93:5	if|if
93:8	condition|(
93:9	name|line
93:14	operator|!=
93:17	name|NULL
93:22	operator|&&
93:25	name|col
93:29	operator|!=
93:32	name|NULL
93:36	condition|)
93:38	block|{
94:1	comment|//        std::cout<< "---"<< line<< ":"<< col<< "---"<< std::endl;
95:9	name|p
95:11	operator|=
95:13	name|line
95:17	expr_stmt|;
96:9	name|p
96:11	operator|=
96:13	name|p
96:15	operator|+
96:17	literal|":"
96:21	operator|+
96:23	name|col
96:26	expr_stmt|;
97:9	name|free
97:13	argument_list|(
97:14	name|line
97:18	argument_list|)
97:19	expr_stmt|;
98:9	name|free
98:13	argument_list|(
98:14	name|col
98:17	argument_list|)
98:18	expr_stmt|;
98:19	block|}
100:1	comment|//    std::cout<< "calling position "<< p<< std::endl;
102:5	return|return
102:12	name|p
102:13	return|;
102:14	block|}
-:-	end_function
-:-	begin_function
107:1	name|std
107:4	operator|::
107:6	name|string
107:13	name|srcml2tokenHandlers
107:32	operator|::
107:34	name|getPosition
107:45	parameter_list|()
108:1	block|{
109:5	return|return
109:12	name|pos
109:15	return|;
109:16	block|}
-:-	end_function
-:-	begin_comment
113:1	comment|// ---------------------------------------------------------------------------
-:-	end_comment
-:-	begin_comment
114:1	comment|//  srcml2tokenHandlers: Implementation of the SAX DocumentHandler interface
-:-	end_comment
-:-	begin_comment
115:1	comment|// ---------------------------------------------------------------------------
-:-	end_comment
-:-	begin_function
116:1	name|void
116:6	name|srcml2tokenHandlers
116:25	operator|::
116:27	name|startElement
116:39	parameter_list|(
116:40	specifier|const
116:46	name|XMLCh
116:51	modifier|*
116:53	specifier|const
116:59	comment|//uri
116:59	parameter_list|,
117:40	specifier|const
117:46	name|XMLCh
117:51	modifier|*
117:53	specifier|const
117:59	name|localname
117:68	parameter_list|,
118:40	specifier|const
118:46	name|XMLCh
118:51	modifier|*
118:53	specifier|const
118:59	name|qname
118:64	parameter_list|,
119:42	specifier|const
119:48	name|Attributes
119:58	modifier|&
119:60	name|attrs
119:65	parameter_list|)
120:1	block|{
121:5	name|std
121:8	operator|::
121:10	name|string
121:17	name|tagLocal
121:26	init|=
121:28	name|XMLString
121:37	operator|::
121:39	name|transcode
121:48	argument_list|(
121:49	name|localname
121:58	argument_list|)
121:59	decl_stmt|;
122:1	comment|//    char *tagName = XMLString::transcode(qname);
123:5	name|std
123:8	operator|::
123:10	name|string
123:17	name|tmp
123:21	init|=
123:23	name|position
123:31	argument_list|(
123:32	name|attrs
123:37	argument_list|)
123:38	decl_stmt|;
124:5	if|if
124:8	condition|(
124:9	name|tmp
124:13	operator|!=
124:16	literal|""
124:18	condition|)
124:21	block|{
125:9	name|currentPos
125:20	operator|=
125:22	name|tmp
125:25	expr_stmt|;
125:26	block|}
127:5	if|if
127:8	condition|(
127:9	name|depth
127:15	operator|<=
127:18	literal|1
127:19	condition|)
127:22	block|{
128:9	name|setPosition
128:20	argument_list|(
128:21	name|currentPos
128:31	argument_list|)
128:32	expr_stmt|;
129:9	comment|//std::cout<< "-"<< "\t"<< tagName<< " "<< depth<< std::endl;
131:9	if|if
131:12	condition|(
131:13	name|tagLocal
131:22	operator|==
131:25	literal|"unit"
131:31	condition|)
131:33	block|{
133:1	comment|//<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="test-exec/count.cpp" pos:tabs="8"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include<pos:position pos:line="1" pos:column="9"/></cpp:directive><cpp:file pos:line="1" pos:column="10">&lt;iostream&gt;<pos:position pos:line="1" pos:column="23"/></cpp:file></cpp:include>
135:13	name|auto
135:18	name|revision
135:27	init|=
135:29	name|get_attribute_value
135:48	argument_list|(
135:49	name|attrs
135:54	argument_list|,
135:56	literal|"revision"
135:66	argument_list|)
135:67	decl_stmt|;
136:13	name|auto
136:18	name|language
136:27	init|=
136:29	name|get_attribute_value
136:48	argument_list|(
136:49	name|attrs
136:54	argument_list|,
136:56	literal|"language"
136:66	argument_list|)
136:67	decl_stmt|;
137:13	if|if
137:16	condition|(
137:17	name|revision
137:26	operator|!=
137:29	literal|""
137:32	operator|&&
137:35	name|language
137:44	operator|!=
137:47	literal|""
137:49	condition|)
137:51	block|{
138:17	name|std
138:20	operator|::
138:22	name|cout
138:27	operator|<<
138:30	literal|"-:-"
138:36	operator|<<
138:39	literal|"\t"
138:44	operator|<<
138:47	literal|"begin_unit|"
138:61	operator|<<
139:21	literal|"revision:"
139:33	operator|<<
139:36	name|revision
139:45	operator|<<
139:48	literal|";"
139:52	operator|<<
140:21	literal|"language:"
140:33	operator|<<
140:36	name|language
140:45	operator|<<
140:48	literal|";"
140:52	operator|<<
141:21	literal|"cregit-version:"
141:39	operator|<<
141:42	name|CREGIT_VERSION
141:57	operator|<<
142:21	name|std
142:24	operator|::
142:26	name|endl
142:30	expr_stmt|;
142:31	block|}
143:15	else|else
143:20	block|{
144:17	name|std
144:20	operator|::
144:22	name|cout
144:27	operator|<<
144:30	literal|"-:-"
144:36	operator|<<
144:39	literal|"\t"
144:44	operator|<<
144:47	literal|"begin_"
144:56	operator|<<
144:59	name|tagLocal
144:68	operator|<<
144:71	name|std
144:74	operator|::
144:76	name|endl
144:80	expr_stmt|;
144:81	block|}
145:14	block|}
146:11	else|else
146:16	block|{
147:13	name|std
147:16	operator|::
147:18	name|cout
147:23	operator|<<
147:26	literal|"-:-"
147:32	operator|<<
147:35	literal|"\t"
147:40	operator|<<
147:43	literal|"begin_"
147:52	operator|<<
147:55	name|tagLocal
147:64	operator|<<
147:67	name|std
147:70	operator|::
147:72	name|endl
147:76	expr_stmt|;
147:77	block|}
148:10	block|}
151:5	if|if
151:8	condition|(
151:9	name|currentContent
151:23	operator|.
151:24	name|length
151:30	argument_list|()
151:33	operator|>
151:35	literal|0
151:36	condition|)
151:39	block|{
152:9	name|std
152:12	operator|::
152:14	name|cout
152:19	operator|<<
152:22	name|getPosition
152:33	argument_list|()
152:36	operator|<<
152:39	literal|"\t"
152:44	operator|<<
152:47	name|currentContent
152:62	operator|<<
152:65	name|std
152:68	operator|::
152:70	name|endl
152:74	expr_stmt|;
153:9	name|currentContent
153:24	operator|=
153:26	literal|""
153:28	expr_stmt|;
153:29	block|}
157:5	name|mystack
157:12	operator|.
157:13	name|push
157:17	argument_list|(
157:18	name|tagLocal
157:26	argument_list|)
157:27	expr_stmt|;
158:5	name|toOutputStack
158:18	operator|.
158:19	name|push
158:23	argument_list|(
158:24	literal|0
158:25	argument_list|)
158:26	expr_stmt|;
160:5	name|depth
160:10	operator|++
160:12	expr_stmt|;
162:1	comment|//    XMLString::release(line);
163:5	comment|//XMLString::release(col);
163:5	block|}
-:-	end_function
-:-	begin_function
167:1	name|void
167:6	name|srcml2tokenHandlers
167:25	operator|::
167:27	name|endElement
167:38	parameter_list|(
167:39	specifier|const
167:45	name|XMLCh
167:51	modifier|*
167:52	specifier|const
167:58	comment|/*uri*/
167:58	parameter_list|,
168:37	specifier|const
168:43	name|XMLCh
168:49	modifier|*
168:50	specifier|const
168:56	name|localname
168:65	parameter_list|,
169:37	specifier|const
169:43	name|XMLCh
169:49	modifier|*
169:50	specifier|const
169:56	comment|/*qname*/
169:56	parameter_list|)
170:1	block|{
171:5	name|char
171:10	modifier|*
171:11	name|tagName
171:19	init|=
171:21	name|XMLString
171:30	operator|::
171:32	name|transcode
171:41	argument_list|(
171:42	name|localname
171:51	argument_list|)
171:52	decl_stmt|;
173:5	comment|// No escapes are legal here
174:5	if|if
174:8	condition|(
174:9	name|currentContent
174:23	operator|.
174:24	name|length
174:30	argument_list|()
174:33	operator|>
174:35	literal|0
174:36	condition|)
174:39	block|{
175:9	name|std
175:12	operator|::
175:14	name|cout
175:19	operator|<<
175:22	name|getPosition
175:33	argument_list|()
175:36	operator|<<
175:39	literal|"\t"
175:44	operator|<<
175:47	name|currentContent
175:62	operator|<<
175:65	name|std
175:68	operator|::
175:70	name|endl
175:74	expr_stmt|;
176:9	name|currentContent
176:24	operator|=
176:26	literal|""
176:28	expr_stmt|;
176:29	block|}
179:5	name|std
179:8	operator|::
179:10	name|string
179:17	name|parent
179:24	init|=
179:26	name|mystack
179:33	operator|.
179:34	name|top
179:37	argument_list|()
179:39	decl_stmt|;
182:5	name|mystack
182:12	operator|.
182:13	name|pop
182:16	argument_list|()
182:18	expr_stmt|;
183:5	name|toOutputStack
183:18	operator|.
183:19	name|pop
183:22	argument_list|()
183:24	expr_stmt|;
184:5	name|depth
184:10	operator|--
184:12	expr_stmt|;
185:5	if|if
185:8	condition|(
185:9	name|depth
185:15	operator|<=
185:18	literal|1
185:19	condition|)
186:9	name|std
186:12	operator|::
186:14	name|cout
186:19	operator|<<
186:22	literal|"-:-"
186:28	operator|<<
186:31	literal|"\t"
186:36	operator|<<
186:39	literal|"end_"
186:46	operator|<<
186:49	name|tagName
186:57	operator|<<
186:60	name|std
186:63	operator|::
186:65	name|endl
186:69	expr_stmt|;
186:70	block|}
-:-	end_function
-:-	begin_function
191:1	name|void
191:6	name|srcml2tokenHandlers
191:25	operator|::
191:27	name|characters
191:37	parameter_list|(
191:40	specifier|const
191:48	name|XMLCh
191:53	modifier|*
191:55	specifier|const
191:64	name|chars
191:69	parameter_list|,
192:71	specifier|const
192:77	name|XMLSize_t
192:87	name|length
192:93	parameter_list|)
193:1	block|{
194:5	name|std
194:8	operator|::
194:10	name|string
194:17	name|st
194:20	init|=
194:22	name|mytrim
194:28	argument_list|(
194:29	name|XMLString
194:38	operator|::
194:40	name|transcode
194:49	argument_list|(
194:50	name|chars
194:55	argument_list|)
194:56	argument_list|)
194:57	decl_stmt|;
195:5	name|std
195:8	operator|::
195:10	name|string
195:17	name|node
195:22	init|=
195:24	name|mystack
195:31	operator|.
195:32	name|top
195:35	argument_list|()
195:37	decl_stmt|;
198:5	if|if
198:8	condition|(
198:9	name|st
198:11	operator|.
198:12	name|length
198:18	argument_list|()
198:21	operator|>
198:23	literal|0
198:24	condition|)
198:26	block|{
199:9	name|std
199:12	operator|::
199:14	name|replace
199:21	argument_list|(
199:23	name|st
199:25	operator|.
199:26	name|begin
199:31	argument_list|()
199:33	argument_list|,
199:35	name|st
199:37	operator|.
199:38	name|end
199:41	argument_list|()
199:43	argument_list|,
199:45	literal|'\n'
199:49	argument_list|,
199:51	literal|' '
199:54	argument_list|)
199:55	expr_stmt|;
201:9	if|if
201:12	condition|(
201:13	name|currentContent
201:27	operator|.
201:28	name|length
201:34	argument_list|()
201:37	operator|==
201:40	literal|0
201:41	condition|)
201:43	block|{
202:13	name|setPosition
202:24	argument_list|(
202:25	name|currentPos
202:35	argument_list|)
202:36	expr_stmt|;
203:13	name|currentContent
203:28	operator|=
203:30	name|mystack
203:37	operator|.
203:38	name|top
203:41	argument_list|()
203:44	operator|+
203:46	literal|"|"
203:49	expr_stmt|;
203:50	block|}
205:9	name|currentContent
205:24	operator|=
205:26	name|currentContent
205:41	operator|+
205:43	name|st
205:45	expr_stmt|;
205:46	block|}
206:6	block|}
-:-	end_function
-:-	begin_function
210:1	name|void
210:6	name|srcml2tokenHandlers
210:25	operator|::
210:27	name|ignorableWhitespace
210:46	parameter_list|(
210:48	specifier|const
210:56	name|XMLCh
210:61	modifier|*
210:63	specifier|const
210:69	comment|/* chars */
210:69	parameter_list|,
211:87	specifier|const
211:93	name|XMLSize_t
211:103	name|length
211:109	parameter_list|)
212:1	block|{  }
-:-	end_function
-:-	begin_function
216:1	name|void
216:6	name|srcml2tokenHandlers
216:25	operator|::
216:27	name|startDocument
216:40	parameter_list|()
217:1	block|{ }
-:-	end_function
-:-	begin_comment
221:1	comment|// ---------------------------------------------------------------------------
-:-	end_comment
-:-	begin_comment
222:1	comment|//  srcml2tokenHandlers: Overrides of the SAX ErrorHandler interface
-:-	end_comment
-:-	begin_comment
223:1	comment|// ---------------------------------------------------------------------------
-:-	end_comment
-:-	begin_function
224:1	name|void
224:6	name|srcml2tokenHandlers
224:25	operator|::
224:27	name|error
224:32	parameter_list|(
224:33	specifier|const
224:39	name|SAXParseException
224:56	modifier|&
224:58	name|e
224:59	parameter_list|)
225:1	block|{
226:5	name|XERCES_STD_QUALIFIER
226:26	name|cerr
226:31	operator|<<
226:34	literal|"\nError at file "
226:53	operator|<<
226:56	name|StrX
226:60	argument_list|(
226:61	name|e
226:62	operator|.
226:63	name|getSystemId
226:74	argument_list|()
226:76	argument_list|)
227:18	operator|<<
227:21	literal|", line "
227:31	operator|<<
227:34	name|e
227:35	operator|.
227:36	name|getLineNumber
227:49	argument_list|()
228:18	operator|<<
228:21	literal|", char "
228:31	operator|<<
228:34	name|e
228:35	operator|.
228:36	name|getColumnNumber
228:51	argument_list|()
229:10	operator|<<
229:13	literal|"\n  Message: "
229:29	operator|<<
229:32	name|StrX
229:36	argument_list|(
229:37	name|e
229:38	operator|.
229:39	name|getMessage
229:49	argument_list|()
229:51	argument_list|)
229:53	operator|<<
229:56	name|XERCES_STD_QUALIFIER
229:77	name|endl
229:81	expr_stmt|;
229:82	block|}
-:-	end_function
-:-	begin_function
232:1	name|void
232:6	name|srcml2tokenHandlers
232:25	operator|::
232:27	name|fatalError
232:37	parameter_list|(
232:38	specifier|const
232:44	name|SAXParseException
232:61	modifier|&
232:63	name|e
232:64	parameter_list|)
233:1	block|{
234:5	name|XERCES_STD_QUALIFIER
234:26	name|cerr
234:31	operator|<<
234:34	literal|"\nFatal Error at file "
234:59	operator|<<
234:62	name|StrX
234:66	argument_list|(
234:67	name|e
234:68	operator|.
234:69	name|getSystemId
234:80	argument_list|()
234:82	argument_list|)
235:18	operator|<<
235:21	literal|", line "
235:31	operator|<<
235:34	name|e
235:35	operator|.
235:36	name|getLineNumber
235:49	argument_list|()
236:18	operator|<<
236:21	literal|", char "
236:31	operator|<<
236:34	name|e
236:35	operator|.
236:36	name|getColumnNumber
236:51	argument_list|()
237:18	operator|<<
237:21	literal|"\n  Message: "
237:37	operator|<<
237:40	name|StrX
237:44	argument_list|(
237:45	name|e
237:46	operator|.
237:47	name|getMessage
237:57	argument_list|()
237:59	argument_list|)
237:61	operator|<<
237:64	name|XERCES_STD_QUALIFIER
237:85	name|endl
237:89	expr_stmt|;
237:90	block|}
-:-	end_function
-:-	begin_function
240:1	name|void
240:6	name|srcml2tokenHandlers
240:25	operator|::
240:27	name|warning
240:34	parameter_list|(
240:35	specifier|const
240:41	name|SAXParseException
240:58	modifier|&
240:60	name|e
240:61	parameter_list|)
241:1	block|{
242:5	name|XERCES_STD_QUALIFIER
242:26	name|cerr
242:31	operator|<<
242:34	literal|"\nWarning at file "
242:55	operator|<<
242:58	name|StrX
242:62	argument_list|(
242:63	name|e
242:64	operator|.
242:65	name|getSystemId
242:76	argument_list|()
242:78	argument_list|)
243:18	operator|<<
243:21	literal|", line "
243:31	operator|<<
243:34	name|e
243:35	operator|.
243:36	name|getLineNumber
243:49	argument_list|()
244:18	operator|<<
244:21	literal|", char "
244:31	operator|<<
244:34	name|e
244:35	operator|.
244:36	name|getColumnNumber
244:51	argument_list|()
245:10	operator|<<
245:13	literal|"\n  Message: "
245:29	operator|<<
245:32	name|StrX
245:36	argument_list|(
245:37	name|e
245:38	operator|.
245:39	name|getMessage
245:49	argument_list|()
245:51	argument_list|)
245:53	operator|<<
245:56	name|XERCES_STD_QUALIFIER
245:77	name|endl
245:81	expr_stmt|;
245:82	block|}
-:-	end_function
-:-	begin_function
248:1	name|void
248:6	name|srcml2tokenHandlers
248:25	operator|::
248:27	name|resetErrors
248:38	parameter_list|()
249:1	block|{  }
-:-	end_function
-:-	end_unit
